// canSegment[i] 表示前i个字符是否可以分。
// 从前往后枚举结尾。对于每个结尾，枚举最后一段可分成字典中单词的字符串的长度j。然后先看f[i-j]是否可分，再判断长度为j的字符串是不是真的在字典中。
public class Solution {
    /*
     * @param s: A string
     * @param dict: A dictionary of words dict
     * @return: A boolean
     */
     
    private int getMaxLength(Set<String> dict) {
        int maxLength = 0;
        for (String word : dict) {
            maxLength = Math.max(word.length(), maxLength);
        }
        return maxLength;
    }
    public boolean wordBreak(String s, Set<String> dict) {
        // write your code here
        if (s == null || s.length() == 0) {
            return true;
        }
        int n = s.length();
        boolean[] canSegment = new boolean[n + 1];
        
        int maxLength = getMaxLength(dict);
        
        canSegment[0] = true;
        
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= maxLength && j <= i; j++) {
                if (canSegment[i - j] != true) {
                    continue;
                }
                String word = s.substring(i - j, i);
                if (dict.contains(word)) {
                    canSegment[i] = true;
                    break;
                }
            }
        }
        
        return canSegment[n];
    }
}
